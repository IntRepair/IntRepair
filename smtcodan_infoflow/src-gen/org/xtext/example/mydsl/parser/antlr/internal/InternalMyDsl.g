/*
* generated by Xtext
*/
grammar InternalMyDsl;

options {
	superClass=AbstractInternalAntlrParser;
	backtrack=true;
	
}

@lexer::header {
package org.xtext.example.mydsl.parser.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.parser.antlr.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.parser.antlr.internal; 

import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.emf.common.util.Enumerator;
import org.eclipse.xtext.parser.antlr.AbstractInternalAntlrParser;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.parser.antlr.AntlrDatatypeRuleToken;
import org.xtext.example.mydsl.services.MyDslGrammarAccess;

}

@parser::members {

/*
  This grammar contains a lot of empty actions to work around a bug in ANTLR.
  Otherwise the ANTLR tool will create synpreds that cannot be compiled in some rare cases.
*/
 
 	private MyDslGrammarAccess grammarAccess;
 	
    public InternalMyDslParser(TokenStream input, MyDslGrammarAccess grammarAccess) {
        this(input);
        this.grammarAccess = grammarAccess;
        registerRules(grammarAccess.getGrammar());
    }
    
    @Override
    protected String getFirstRuleName() {
    	return "AnnotationLanguage";	
   	}
   	
   	@Override
   	protected MyDslGrammarAccess getGrammarAccess() {
   		return grammarAccess;
   	}
}

@rulecatch { 
    catch (RecognitionException re) { 
        recover(input,re); 
        appendSkippedTokens();
    } 
}




// Entry rule entryRuleAnnotationLanguage
entryRuleAnnotationLanguage returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAnnotationLanguageRule()); }
	 iv_ruleAnnotationLanguage=ruleAnnotationLanguage 
	 { $current=$iv_ruleAnnotationLanguage.current; } 
	 EOF 
;

// Rule AnnotationLanguage
ruleAnnotationLanguage returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
(
		{ 
	        newCompositeNode(grammarAccess.getAnnotationLanguageAccess().getElementHeaderModelParserRuleCall_0()); 
	    }
		lv_element_0_0=ruleHeaderModel		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAnnotationLanguageRule());
	        }
       		add(
       			$current, 
       			"element",
        		lv_element_0_0, 
        		"HeaderModel");
	        afterParserOrEnumRuleCall();
	    }

)
)*
;





// Entry rule entryRuleHeaderModel
entryRuleHeaderModel returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getHeaderModelRule()); }
	 iv_ruleHeaderModel=ruleHeaderModel 
	 { $current=$iv_ruleHeaderModel.current; } 
	 EOF 
;

// Rule HeaderModel
ruleHeaderModel returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
(
		{ 
	        newCompositeNode(grammarAccess.getHeaderModelAccess().getHeadersSingleLineAnnotationParserRuleCall_0_0()); 
	    }
		lv_headers_0_0=ruleSingleLineAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getHeaderModelRule());
	        }
       		add(
       			$current, 
       			"headers",
        		lv_headers_0_0, 
        		"SingleLineAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)
    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getHeaderModelAccess().getMultilineAnnotationParserRuleCall_1()); 
    }
    this_MultilineAnnotation_1=ruleMultilineAnnotation
    { 
        $current = $this_MultilineAnnotation_1.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getHeaderModelAccess().getMethodHeaderParserRuleCall_2()); 
    }
    this_MethodHeader_2=ruleMethodHeader
    { 
        $current = $this_MethodHeader_2.current; 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getHeaderModelAccess().getAttributeDefinitionParserRuleCall_3()); 
    }
    this_AttributeDefinition_3=ruleAttributeDefinition
    { 
        $current = $this_AttributeDefinition_3.current; 
        afterParserOrEnumRuleCall();
    }
)
;





// Entry rule entryRuleAttributeDefinition
entryRuleAttributeDefinition returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getAttributeDefinitionRule()); }
	 iv_ruleAttributeDefinition=ruleAttributeDefinition 
	 { $current=$iv_ruleAttributeDefinition.current; } 
	 EOF 
;

// Rule AttributeDefinition
ruleAttributeDefinition returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getAttributeDefinitionAccess().getAttributeDefinitionAction_0(),
            $current);
    }
)((
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getAttribute_defSYMBOLSParserRuleCall_1_0_0()); 
	    }
		lv_attribute_def_1_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeDefinitionRule());
	        }
       		add(
       			$current, 
       			"attribute_def",
        		lv_attribute_def_1_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_2=' ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getAttributeDefinitionAccess().getSpaceKeyword_1_1());
    }
)*(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getExtensionKeyWordParserRuleCall_1_2_0()); 
	    }
		lv_extension_3_0=ruleKeyWord		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeDefinitionRule());
	        }
       		add(
       			$current, 
       			"extension",
        		lv_extension_3_0, 
        		"KeyWord");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getAttributeDefinitionAccess().getExtension_2ExpressionAttributeParserRuleCall_1_3_0()); 
	    }
		lv_extension_2_4_0=ruleExpressionAttribute		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getAttributeDefinitionRule());
	        }
       		add(
       			$current, 
       			"extension_2",
        		lv_extension_2_4_0, 
        		"ExpressionAttribute");
	        afterParserOrEnumRuleCall();
	    }

)
))(	otherlv_5='\n' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getAttributeDefinitionAccess().getControl000aKeyword_2_0());
    }

    |	otherlv_6='\r' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getAttributeDefinitionAccess().getControl000dKeyword_2_1());
    }
)*)
;





// Entry rule entryRuleExpressionAttribute
entryRuleExpressionAttribute returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionAttributeRule()); }
	 iv_ruleExpressionAttribute=ruleExpressionAttribute 
	 { $current=$iv_ruleExpressionAttribute.current; } 
	 EOF 
;

// Rule ExpressionAttribute
ruleExpressionAttribute returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpressionAttributeAccess().getEntityRefParserRuleCall_0()); 
    }
    this_EntityRef_0=ruleEntityRef
    { 
        $current = $this_EntityRef_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExpressionAttributeAccess().getExpressionRefAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAttributeAccess().getSymbols_attrSYMBOLSParserRuleCall_1_1_0()); 
	    }
		lv_symbols_attr_2_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionAttributeRule());
	        }
       		add(
       			$current, 
       			"symbols_attr",
        		lv_symbols_attr_2_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAttributeAccess().getTailEntityRefParserRuleCall_1_2_0()); 
	    }
		lv_tail_3_0=ruleEntityRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionAttributeRule());
	        }
       		set(
       			$current, 
       			"tail",
        		lv_tail_3_0, 
        		"EntityRef");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleMethodHeader
entryRuleMethodHeader returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMethodHeaderRule()); }
	 iv_ruleMethodHeader=ruleMethodHeader 
	 { $current=$iv_ruleMethodHeader.current; } 
	 EOF 
;

// Rule MethodHeader
ruleMethodHeader returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMethodHeaderAccess().getMethodHeaderAction_0(),
            $current);
    }
)(((
(
		{ 
	        newCompositeNode(grammarAccess.getMethodHeaderAccess().getName0SYMBOLSParserRuleCall_1_0_0_0()); 
	    }
		lv_name0_1_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodHeaderRule());
	        }
       		set(
       			$current, 
       			"name0",
        		lv_name0_1_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?((	otherlv_2=' ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMethodHeaderAccess().getSpaceKeyword_1_0_1_0());
    }
)?(	otherlv_3='*' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getMethodHeaderAccess().getAsteriskKeyword_1_0_1_1());
    }
)*(	otherlv_4=' ' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMethodHeaderAccess().getSpaceKeyword_1_0_1_2());
    }
)*this_ID_5=RULE_ID
    { 
    newLeafNode(this_ID_5, grammarAccess.getMethodHeaderAccess().getIDTerminalRuleCall_1_0_1_3()); 
    }
(	otherlv_6=' ' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getMethodHeaderAccess().getSpaceKeyword_1_0_1_4());
    }
)?)*(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodHeaderAccess().getName1SYMBOLSParserRuleCall_1_0_2_0()); 
	    }
		lv_name1_7_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodHeaderRule());
	        }
       		set(
       			$current, 
       			"name1",
        		lv_name1_7_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodHeaderAccess().getExpExpressionParserRuleCall_1_0_3_0()); 
	    }
		lv_exp_8_0=ruleExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodHeaderRule());
	        }
       		add(
       			$current, 
       			"exp",
        		lv_exp_8_0, 
        		"Expression");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodHeaderAccess().getName2SYMBOLSParserRuleCall_1_0_4_0()); 
	    }
		lv_name2_9_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodHeaderRule());
	        }
       		set(
       			$current, 
       			"name2",
        		lv_name2_9_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
))((
(
		{ 
	        newCompositeNode(grammarAccess.getMethodHeaderAccess().getName3SYMBOLSParserRuleCall_1_1_0_0()); 
	    }
		lv_name3_10_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodHeaderRule());
	        }
       		set(
       			$current, 
       			"name3",
        		lv_name3_10_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(this_ID_11=RULE_ID
    { 
    newLeafNode(this_ID_11, grammarAccess.getMethodHeaderAccess().getIDTerminalRuleCall_1_1_1()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodHeaderAccess().getName4SYMBOLSParserRuleCall_1_1_2_0()); 
	    }
		lv_name4_12_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodHeaderRule());
	        }
       		set(
       			$current, 
       			"name4",
        		lv_name4_12_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(this_ID_13=RULE_ID
    { 
    newLeafNode(this_ID_13, grammarAccess.getMethodHeaderAccess().getIDTerminalRuleCall_1_1_3()); 
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodHeaderAccess().getName5SYMBOLSParserRuleCall_1_1_4_0()); 
	    }
		lv_name5_14_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodHeaderRule());
	        }
       		set(
       			$current, 
       			"name5",
        		lv_name5_14_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(this_ID_15=RULE_ID
    { 
    newLeafNode(this_ID_15, grammarAccess.getMethodHeaderAccess().getIDTerminalRuleCall_1_1_5()); 
    }
)?)(
(
		{ 
	        newCompositeNode(grammarAccess.getMethodHeaderAccess().getName6SYMBOLSParserRuleCall_1_2_0()); 
	    }
		lv_name6_16_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMethodHeaderRule());
	        }
       		set(
       			$current, 
       			"name6",
        		lv_name6_16_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?)(	otherlv_17='\n' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getMethodHeaderAccess().getControl000aKeyword_2_0());
    }

    |	otherlv_18='\r' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getMethodHeaderAccess().getControl000dKeyword_2_1());
    }
)?)
;





// Entry rule entryRuleExpression
entryRuleExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getExpressionRule()); }
	 iv_ruleExpression=ruleExpression 
	 { $current=$iv_ruleExpression.current; } 
	 EOF 
;

// Rule Expression
ruleExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getExpressionAccess().getEntityRefParserRuleCall_0()); 
    }
    this_EntityRef_0=ruleEntityRef
    { 
        $current = $this_EntityRef_0.current; 
        afterParserOrEnumRuleCall();
    }
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElementAndSet(
            grammarAccess.getExpressionAccess().getExpressionRefAction_1_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getSymbolsSYMBOLSParserRuleCall_1_1_0()); 
	    }
		lv_symbols_2_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		add(
       			$current, 
       			"symbols",
        		lv_symbols_2_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getExpressionAccess().getTailEntityRefParserRuleCall_1_2_0()); 
	    }
		lv_tail_3_0=ruleEntityRef		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getExpressionRule());
	        }
       		set(
       			$current, 
       			"tail",
        		lv_tail_3_0, 
        		"EntityRef");
	        afterParserOrEnumRuleCall();
	    }

)
))*)
;





// Entry rule entryRuleEntityRef
entryRuleEntityRef returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getEntityRefRule()); }
	 iv_ruleEntityRef=ruleEntityRef 
	 { $current=$iv_ruleEntityRef.current; } 
	 EOF 
;

// Rule EntityRef
ruleEntityRef returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getEntityRefAccess().getEntityRefAction_0(),
            $current);
    }
)(
(
		{ 
	        newCompositeNode(grammarAccess.getEntityRefAccess().getEntitySpecialExpressionParserRuleCall_1_0()); 
	    }
		lv_entity_1_0=ruleSpecialExpression		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getEntityRefRule());
	        }
       		add(
       			$current, 
       			"entity",
        		lv_entity_1_0, 
        		"SpecialExpression");
	        afterParserOrEnumRuleCall();
	    }

)
)*)
;







// Entry rule entryRuleSpecialExpression
entryRuleSpecialExpression returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSpecialExpressionRule()); }
	 iv_ruleSpecialExpression=ruleSpecialExpression 
	 { $current=$iv_ruleSpecialExpression.current; } 
	 EOF 
;

// Rule SpecialExpression
ruleSpecialExpression returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSpecialExpressionAccess().getEntityAction_0(),
            $current);
    }
)((
(
		lv_rules_1_0=RULE_ID
		{
			newLeafNode(lv_rules_1_0, grammarAccess.getSpecialExpressionAccess().getRulesIDTerminalRuleCall_1_0_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSpecialExpressionRule());
	        }
       		addWithLastConsumed(
       			$current, 
       			"rules",
        		lv_rules_1_0, 
        		"ID");
	    }

)
)
    |(	otherlv_2='**' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSpecialExpressionAccess().getAsteriskAsteriskKeyword_1_1_0());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecialExpressionAccess().getName0SYMBOLSParserRuleCall_1_1_1_0()); 
	    }
		lv_name0_3_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecialExpressionRule());
	        }
       		set(
       			$current, 
       			"name0",
        		lv_name0_3_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(this_ID_4=RULE_ID
    { 
    newLeafNode(this_ID_4, grammarAccess.getSpecialExpressionAccess().getIDTerminalRuleCall_1_1_2()); 
    }
)?)
    |((
(
		{ 
	        newCompositeNode(grammarAccess.getSpecialExpressionAccess().getName1SYMBOLSParserRuleCall_1_2_0_0()); 
	    }
		lv_name1_5_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecialExpressionRule());
	        }
       		set(
       			$current, 
       			"name1",
        		lv_name1_5_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecialExpressionAccess().getName2SYMBOLSParserRuleCall_1_2_1_0()); 
	    }
		lv_name2_6_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecialExpressionRule());
	        }
       		set(
       			$current, 
       			"name2",
        		lv_name2_6_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecialExpressionAccess().getName3SYMBOLSParserRuleCall_1_2_2_0()); 
	    }
		lv_name3_7_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecialExpressionRule());
	        }
       		set(
       			$current, 
       			"name3",
        		lv_name3_7_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSpecialExpressionAccess().getName4SYMBOLSParserRuleCall_1_2_3_0()); 
	    }
		lv_name4_8_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSpecialExpressionRule());
	        }
       		set(
       			$current, 
       			"name4",
        		lv_name4_8_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(this_ID_9=RULE_ID
    { 
    newLeafNode(this_ID_9, grammarAccess.getSpecialExpressionAccess().getIDTerminalRuleCall_1_2_4()); 
    }
)?)
    |this_INT_10=RULE_INT
    { 
    newLeafNode(this_INT_10, grammarAccess.getSpecialExpressionAccess().getINTTerminalRuleCall_1_3()); 
    }
))
;







// Entry rule entryRuleMultilineAnnotation
entryRuleMultilineAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getMultilineAnnotationRule()); }
	 iv_ruleMultilineAnnotation=ruleMultilineAnnotation 
	 { $current=$iv_ruleMultilineAnnotation.current; } 
	 EOF 
;

// Rule MultilineAnnotation
ruleMultilineAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getMultilineAnnotationAccess().getMultilineAnnotationAction_0(),
            $current);
    }
)(((
(
		lv_rule_1_0=	'/*@ ' 
    {
        newLeafNode(lv_rule_1_0, grammarAccess.getMultilineAnnotationAccess().getRuleSolidusAsteriskCommercialAtSpaceKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getMultilineAnnotationRule());
	        }
       		addWithLastConsumed($current, "rule", lv_rule_1_0, "/*@ ");
	    }

)
)?(	otherlv_2='* ' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getMultilineAnnotationAccess().getAsteriskSpaceKeyword_1_0_1());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMultilineAnnotationAccess().getFunctionAnnotationFunctionAnnotationParserRuleCall_1_0_2_0()); 
	    }
		lv_functionAnnotation_3_0=ruleFunctionAnnotation		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultilineAnnotationRule());
	        }
       		set(
       			$current, 
       			"functionAnnotation",
        		lv_functionAnnotation_3_0, 
        		"FunctionAnnotation");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_4='\n' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getMultilineAnnotationAccess().getControl000aKeyword_1_0_3());
    }
)?(	otherlv_5=' @*/' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getMultilineAnnotationAccess().getSpaceCommercialAtAsteriskSolidusKeyword_1_0_4());
    }
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getMultilineAnnotationAccess().getName0SYMBOLSParserRuleCall_1_0_5_0()); 
	    }
		lv_name0_6_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultilineAnnotationRule());
	        }
       		set(
       			$current, 
       			"name0",
        		lv_name0_6_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?)
    |(	otherlv_7='*' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getMultilineAnnotationAccess().getAsteriskKeyword_1_1_0());
    }
	otherlv_8=' ' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getMultilineAnnotationAccess().getSpaceKeyword_1_1_1());
    }
	otherlv_9=' ' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getMultilineAnnotationAccess().getSpaceKeyword_1_1_2());
    }
	otherlv_10='@*/' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getMultilineAnnotationAccess().getCommercialAtAsteriskSolidusKeyword_1_1_3());
    }
(
(
		{ 
	        newCompositeNode(grammarAccess.getMultilineAnnotationAccess().getName1SYMBOLSParserRuleCall_1_1_4_0()); 
	    }
		lv_name1_11_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getMultilineAnnotationRule());
	        }
       		set(
       			$current, 
       			"name1",
        		lv_name1_11_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_12='\n' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getMultilineAnnotationAccess().getControl000aKeyword_1_1_5_0());
    }

    |	otherlv_13='\r' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getMultilineAnnotationAccess().getControl000dKeyword_1_1_5_1());
    }
)?)))
;





// Entry rule entryRuleFunctionAnnotation
entryRuleFunctionAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getFunctionAnnotationRule()); }
	 iv_ruleFunctionAnnotation=ruleFunctionAnnotation 
	 { $current=$iv_ruleFunctionAnnotation.current; } 
	 EOF 
;

// Rule FunctionAnnotation
ruleFunctionAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getFunctionAnnotationAccess().getFunctionAnnotationAction_0(),
            $current);
    }
)(((
(
		lv_result_1_0=	'@function ' 
    {
        newLeafNode(lv_result_1_0, grammarAccess.getFunctionAnnotationAccess().getResultFunctionKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAnnotationRule());
	        }
       		addWithLastConsumed($current, "result", lv_result_1_0, "@function ");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAnnotationAccess().getFunctionTypeFunctionTypeEnumRuleCall_1_0_1_0()); 
	    }
		lv_functionType_2_0=ruleFunctionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionAnnotationRule());
	        }
       		set(
       			$current, 
       			"functionType",
        		lv_functionType_2_0, 
        		"FunctionType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=' ' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getFunctionAnnotationAccess().getSpaceKeyword_1_0_2());
    }
)?(
(
(
		lv_level_4_1=	'H' 
    {
        newLeafNode(lv_level_4_1, grammarAccess.getFunctionAnnotationAccess().getLevelHKeyword_1_0_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_4_1, null);
	    }

    |		lv_level_4_2=	'L' 
    {
        newLeafNode(lv_level_4_2, grammarAccess.getFunctionAnnotationAccess().getLevelLKeyword_1_0_3_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_4_2, null);
	    }

)

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAnnotationAccess().getName0SYMBOLSParserRuleCall_1_0_4_0()); 
	    }
		lv_name0_5_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionAnnotationRule());
	        }
       		set(
       			$current, 
       			"name0",
        		lv_name0_5_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_nameComment_6_0=RULE_ID
		{
			newLeafNode(lv_nameComment_6_0, grammarAccess.getFunctionAnnotationAccess().getNameCommentIDTerminalRuleCall_1_0_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameComment",
        		lv_nameComment_6_0, 
        		"ID");
	    }

)
)?(	otherlv_7='\n' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getFunctionAnnotationAccess().getControl000aKeyword_1_0_6_0());
    }

    |	otherlv_8='\r' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getFunctionAnnotationAccess().getControl000dKeyword_1_0_6_1());
    }
)?)
    |(	otherlv_9='@parameter ' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getFunctionAnnotationAccess().getParameterKeyword_1_1_0());
    }
(
(
		lv_parameter_10_0=RULE_ID
		{
			newLeafNode(lv_parameter_10_0, grammarAccess.getFunctionAnnotationAccess().getParameterIDTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"parameter",
        		lv_parameter_10_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAnnotationAccess().getName0SYMBOLSParserRuleCall_1_1_2_0()); 
	    }
		lv_name0_11_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionAnnotationRule());
	        }
       		set(
       			$current, 
       			"name0",
        		lv_name0_11_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAnnotationAccess().getSecurityTypeSecurityTypeEnumRuleCall_1_1_3_0()); 
	    }
		lv_securityType_12_0=ruleSecurityType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionAnnotationRule());
	        }
       		set(
       			$current, 
       			"securityType",
        		lv_securityType_12_0, 
        		"SecurityType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_13=' ' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getFunctionAnnotationAccess().getSpaceKeyword_1_1_4());
    }
)?(
(
(
		lv_level_14_1=	'H' 
    {
        newLeafNode(lv_level_14_1, grammarAccess.getFunctionAnnotationAccess().getLevelHKeyword_1_1_5_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_14_1, null);
	    }

    |		lv_level_14_2=	'L' 
    {
        newLeafNode(lv_level_14_2, grammarAccess.getFunctionAnnotationAccess().getLevelLKeyword_1_1_5_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_14_2, null);
	    }

)

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAnnotationAccess().getName1SYMBOLSParserRuleCall_1_1_6_0()); 
	    }
		lv_name1_15_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionAnnotationRule());
	        }
       		set(
       			$current, 
       			"name1",
        		lv_name1_15_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_nameComment_16_0=RULE_ID
		{
			newLeafNode(lv_nameComment_16_0, grammarAccess.getFunctionAnnotationAccess().getNameCommentIDTerminalRuleCall_1_1_7_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameComment",
        		lv_nameComment_16_0, 
        		"ID");
	    }

)
)?(	otherlv_17='\n' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getFunctionAnnotationAccess().getControl000aKeyword_1_1_8_0());
    }

    |	otherlv_18='\r' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getFunctionAnnotationAccess().getControl000dKeyword_1_1_8_1());
    }
)?)
    |(	otherlv_19='@preStep ' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getFunctionAnnotationAccess().getPreStepKeyword_1_2_0());
    }
(
(
		lv_preStep_20_0=RULE_ID
		{
			newLeafNode(lv_preStep_20_0, grammarAccess.getFunctionAnnotationAccess().getPreStepIDTerminalRuleCall_1_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"preStep",
        		lv_preStep_20_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAnnotationAccess().getName0SYMBOLSParserRuleCall_1_2_2_0()); 
	    }
		lv_name0_21_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionAnnotationRule());
	        }
       		set(
       			$current, 
       			"name0",
        		lv_name0_21_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_22=' ' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getFunctionAnnotationAccess().getSpaceKeyword_1_2_3());
    }
)?(
(
(
		lv_level_23_1=	'H' 
    {
        newLeafNode(lv_level_23_1, grammarAccess.getFunctionAnnotationAccess().getLevelHKeyword_1_2_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_23_1, null);
	    }

    |		lv_level_23_2=	'L' 
    {
        newLeafNode(lv_level_23_2, grammarAccess.getFunctionAnnotationAccess().getLevelLKeyword_1_2_4_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_23_2, null);
	    }

)

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAnnotationAccess().getName2SYMBOLSParserRuleCall_1_2_5_0()); 
	    }
		lv_name2_24_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionAnnotationRule());
	        }
       		set(
       			$current, 
       			"name2",
        		lv_name2_24_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_nameComment_25_0=RULE_ID
		{
			newLeafNode(lv_nameComment_25_0, grammarAccess.getFunctionAnnotationAccess().getNameCommentIDTerminalRuleCall_1_2_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameComment",
        		lv_nameComment_25_0, 
        		"ID");
	    }

)
)?(	otherlv_26='\n' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getFunctionAnnotationAccess().getControl000aKeyword_1_2_7_0());
    }

    |	otherlv_27='\r' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getFunctionAnnotationAccess().getControl000dKeyword_1_2_7_1());
    }
)?)
    |(	otherlv_28='@postStep ' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getFunctionAnnotationAccess().getPostStepKeyword_1_3_0());
    }
(
(
		lv_postStep_29_0=RULE_ID
		{
			newLeafNode(lv_postStep_29_0, grammarAccess.getFunctionAnnotationAccess().getPostStepIDTerminalRuleCall_1_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"postStep",
        		lv_postStep_29_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAnnotationAccess().getName0SYMBOLSParserRuleCall_1_3_2_0()); 
	    }
		lv_name0_30_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionAnnotationRule());
	        }
       		set(
       			$current, 
       			"name0",
        		lv_name0_30_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_31=' ' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getFunctionAnnotationAccess().getSpaceKeyword_1_3_3());
    }
)?(
(
(
		lv_level_32_1=	'H' 
    {
        newLeafNode(lv_level_32_1, grammarAccess.getFunctionAnnotationAccess().getLevelHKeyword_1_3_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_32_1, null);
	    }

    |		lv_level_32_2=	'L' 
    {
        newLeafNode(lv_level_32_2, grammarAccess.getFunctionAnnotationAccess().getLevelLKeyword_1_3_4_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_32_2, null);
	    }

)

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getFunctionAnnotationAccess().getName3SYMBOLSParserRuleCall_1_3_5_0()); 
	    }
		lv_name3_33_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getFunctionAnnotationRule());
	        }
       		set(
       			$current, 
       			"name3",
        		lv_name3_33_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_nameComment_34_0=RULE_ID
		{
			newLeafNode(lv_nameComment_34_0, grammarAccess.getFunctionAnnotationAccess().getNameCommentIDTerminalRuleCall_1_3_6_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getFunctionAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameComment",
        		lv_nameComment_34_0, 
        		"ID");
	    }

)
)?(	otherlv_35='\n' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getFunctionAnnotationAccess().getControl000aKeyword_1_3_7_0());
    }

    |	otherlv_36='\r' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getFunctionAnnotationAccess().getControl000dKeyword_1_3_7_1());
    }
)?)))
;





// Entry rule entryRuleSingleLineAnnotation
entryRuleSingleLineAnnotation returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSingleLineAnnotationRule()); }
	 iv_ruleSingleLineAnnotation=ruleSingleLineAnnotation 
	 { $current=$iv_ruleSingleLineAnnotation.current; } 
	 EOF 
;

// Rule SingleLineAnnotation
ruleSingleLineAnnotation returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSingleLineAnnotationAccess().getSingleLineAnnotationAction_0(),
            $current);
    }
)(((
(
		lv_result_1_0=	'//@ @function ' 
    {
        newLeafNode(lv_result_1_0, grammarAccess.getSingleLineAnnotationAccess().getResultFunctionKeyword_1_0_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		addWithLastConsumed($current, "result", lv_result_1_0, "//@ @function ");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleLineAnnotationAccess().getFunctionTypeFunctionTypeEnumRuleCall_1_0_1_0()); 
	    }
		lv_functionType_2_0=ruleFunctionType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleLineAnnotationRule());
	        }
       		set(
       			$current, 
       			"functionType",
        		lv_functionType_2_0, 
        		"FunctionType");
	        afterParserOrEnumRuleCall();
	    }

)
)(	otherlv_3=' ' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSingleLineAnnotationAccess().getSpaceKeyword_1_0_2());
    }
)?(
(
(
		lv_level_4_1=	'H' 
    {
        newLeafNode(lv_level_4_1, grammarAccess.getSingleLineAnnotationAccess().getLevelHKeyword_1_0_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_4_1, null);
	    }

    |		lv_level_4_2=	'L' 
    {
        newLeafNode(lv_level_4_2, grammarAccess.getSingleLineAnnotationAccess().getLevelLKeyword_1_0_3_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_4_2, null);
	    }

)

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleLineAnnotationAccess().getName0SYMBOLSParserRuleCall_1_0_4_0()); 
	    }
		lv_name0_5_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleLineAnnotationRule());
	        }
       		set(
       			$current, 
       			"name0",
        		lv_name0_5_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_nameComment_6_0=RULE_ID
		{
			newLeafNode(lv_nameComment_6_0, grammarAccess.getSingleLineAnnotationAccess().getNameCommentIDTerminalRuleCall_1_0_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameComment",
        		lv_nameComment_6_0, 
        		"ID");
	    }

)
)?(	otherlv_7='\n' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSingleLineAnnotationAccess().getControl000aKeyword_1_0_6_0());
    }

    |	otherlv_8='\r' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSingleLineAnnotationAccess().getControl000dKeyword_1_0_6_1());
    }
)*)
    |(	otherlv_9='//@ @parameter ' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSingleLineAnnotationAccess().getParameterKeyword_1_1_0());
    }
(
(
		lv_parameter_10_0=RULE_ID
		{
			newLeafNode(lv_parameter_10_0, grammarAccess.getSingleLineAnnotationAccess().getParameterIDTerminalRuleCall_1_1_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"parameter",
        		lv_parameter_10_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleLineAnnotationAccess().getSecurityTypeSecurityTypeEnumRuleCall_1_1_2_0()); 
	    }
		lv_securityType_11_0=ruleSecurityType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleLineAnnotationRule());
	        }
       		set(
       			$current, 
       			"securityType",
        		lv_securityType_11_0, 
        		"SecurityType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_12=' ' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSingleLineAnnotationAccess().getSpaceKeyword_1_1_3());
    }
)?(
(
(
		lv_level_13_1=	'H' 
    {
        newLeafNode(lv_level_13_1, grammarAccess.getSingleLineAnnotationAccess().getLevelHKeyword_1_1_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_13_1, null);
	    }

    |		lv_level_13_2=	'L' 
    {
        newLeafNode(lv_level_13_2, grammarAccess.getSingleLineAnnotationAccess().getLevelLKeyword_1_1_4_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_13_2, null);
	    }

)

)
)?(
(
		lv_nameComment_14_0=RULE_ID
		{
			newLeafNode(lv_nameComment_14_0, grammarAccess.getSingleLineAnnotationAccess().getNameCommentIDTerminalRuleCall_1_1_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameComment",
        		lv_nameComment_14_0, 
        		"ID");
	    }

)
)?(	otherlv_15='\n' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSingleLineAnnotationAccess().getControl000aKeyword_1_1_6_0());
    }

    |	otherlv_16='\r' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getSingleLineAnnotationAccess().getControl000dKeyword_1_1_6_1());
    }
)?)
    |(	otherlv_17='//@ @variable ' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getSingleLineAnnotationAccess().getVariableKeyword_1_2_0());
    }
(
(
		lv_variable_18_0=RULE_ID
		{
			newLeafNode(lv_variable_18_0, grammarAccess.getSingleLineAnnotationAccess().getVariableIDTerminalRuleCall_1_2_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"variable",
        		lv_variable_18_0, 
        		"ID");
	    }

)
)(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleLineAnnotationAccess().getSecurityTypeSecurityTypeEnumRuleCall_1_2_2_0()); 
	    }
		lv_securityType_19_0=ruleSecurityType		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleLineAnnotationRule());
	        }
       		set(
       			$current, 
       			"securityType",
        		lv_securityType_19_0, 
        		"SecurityType");
	        afterParserOrEnumRuleCall();
	    }

)
)?(	otherlv_20=' ' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getSingleLineAnnotationAccess().getSpaceKeyword_1_2_3());
    }
)?(
(
(
		lv_level_21_1=	'H' 
    {
        newLeafNode(lv_level_21_1, grammarAccess.getSingleLineAnnotationAccess().getLevelHKeyword_1_2_4_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_21_1, null);
	    }

    |		lv_level_21_2=	'L' 
    {
        newLeafNode(lv_level_21_2, grammarAccess.getSingleLineAnnotationAccess().getLevelLKeyword_1_2_4_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_21_2, null);
	    }

)

)
)?(
(
		lv_nameComment_22_0=RULE_ID
		{
			newLeafNode(lv_nameComment_22_0, grammarAccess.getSingleLineAnnotationAccess().getNameCommentIDTerminalRuleCall_1_2_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameComment",
        		lv_nameComment_22_0, 
        		"ID");
	    }

)
)?(	otherlv_23='\n' 
    {
    	newLeafNode(otherlv_23, grammarAccess.getSingleLineAnnotationAccess().getControl000aKeyword_1_2_6_0());
    }

    |	otherlv_24='\r' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getSingleLineAnnotationAccess().getControl000dKeyword_1_2_6_1());
    }
)?)
    |(	otherlv_25='//@ @preStep ' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getSingleLineAnnotationAccess().getPreStepKeyword_1_3_0());
    }
(
(
		lv_preStep_26_0=RULE_ID
		{
			newLeafNode(lv_preStep_26_0, grammarAccess.getSingleLineAnnotationAccess().getPreStepIDTerminalRuleCall_1_3_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"preStep",
        		lv_preStep_26_0, 
        		"ID");
	    }

)
)(	otherlv_27=' ' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getSingleLineAnnotationAccess().getSpaceKeyword_1_3_2());
    }
)?(
(
(
		lv_level_28_1=	'H' 
    {
        newLeafNode(lv_level_28_1, grammarAccess.getSingleLineAnnotationAccess().getLevelHKeyword_1_3_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_28_1, null);
	    }

    |		lv_level_28_2=	'L' 
    {
        newLeafNode(lv_level_28_2, grammarAccess.getSingleLineAnnotationAccess().getLevelLKeyword_1_3_3_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_28_2, null);
	    }

)

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleLineAnnotationAccess().getName2SYMBOLSParserRuleCall_1_3_4_0()); 
	    }
		lv_name2_29_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleLineAnnotationRule());
	        }
       		set(
       			$current, 
       			"name2",
        		lv_name2_29_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_nameComment_30_0=RULE_ID
		{
			newLeafNode(lv_nameComment_30_0, grammarAccess.getSingleLineAnnotationAccess().getNameCommentIDTerminalRuleCall_1_3_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameComment",
        		lv_nameComment_30_0, 
        		"ID");
	    }

)
)?(	otherlv_31='\n' 
    {
    	newLeafNode(otherlv_31, grammarAccess.getSingleLineAnnotationAccess().getControl000aKeyword_1_3_6_0());
    }

    |	otherlv_32='\r' 
    {
    	newLeafNode(otherlv_32, grammarAccess.getSingleLineAnnotationAccess().getControl000dKeyword_1_3_6_1());
    }
)*)
    |(	otherlv_33='//@ @postStep ' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getSingleLineAnnotationAccess().getPostStepKeyword_1_4_0());
    }
(
(
		lv_postStep_34_0=RULE_ID
		{
			newLeafNode(lv_postStep_34_0, grammarAccess.getSingleLineAnnotationAccess().getPostStepIDTerminalRuleCall_1_4_1_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"postStep",
        		lv_postStep_34_0, 
        		"ID");
	    }

)
)(	otherlv_35=' ' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getSingleLineAnnotationAccess().getSpaceKeyword_1_4_2());
    }
)?(
(
(
		lv_level_36_1=	'H' 
    {
        newLeafNode(lv_level_36_1, grammarAccess.getSingleLineAnnotationAccess().getLevelHKeyword_1_4_3_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_36_1, null);
	    }

    |		lv_level_36_2=	'L' 
    {
        newLeafNode(lv_level_36_2, grammarAccess.getSingleLineAnnotationAccess().getLevelLKeyword_1_4_3_0_1());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed($current, "level", lv_level_36_2, null);
	    }

)

)
)?(
(
		{ 
	        newCompositeNode(grammarAccess.getSingleLineAnnotationAccess().getName3SYMBOLSParserRuleCall_1_4_4_0()); 
	    }
		lv_name3_37_0=ruleSYMBOLS		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSingleLineAnnotationRule());
	        }
       		set(
       			$current, 
       			"name3",
        		lv_name3_37_0, 
        		"SYMBOLS");
	        afterParserOrEnumRuleCall();
	    }

)
)?(
(
		lv_nameComment_38_0=RULE_ID
		{
			newLeafNode(lv_nameComment_38_0, grammarAccess.getSingleLineAnnotationAccess().getNameCommentIDTerminalRuleCall_1_4_5_0()); 
		}
		{
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSingleLineAnnotationRule());
	        }
       		setWithLastConsumed(
       			$current, 
       			"nameComment",
        		lv_nameComment_38_0, 
        		"ID");
	    }

)
)?(	otherlv_39='\n' 
    {
    	newLeafNode(otherlv_39, grammarAccess.getSingleLineAnnotationAccess().getControl000aKeyword_1_4_6_0());
    }

    |	otherlv_40='\r' 
    {
    	newLeafNode(otherlv_40, grammarAccess.getSingleLineAnnotationAccess().getControl000dKeyword_1_4_6_1());
    }
)*)))
;





// Entry rule entryRuleKeyWord
entryRuleKeyWord returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getKeyWordRule()); }
	 iv_ruleKeyWord=ruleKeyWord 
	 { $current=$iv_ruleKeyWord.current; } 
	 EOF 
;

// Rule KeyWord
ruleKeyWord returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getKeyWordAccess().getKeyWordAction_0(),
            $current);
    }
)((
(
		lv_rule_1_0=	'__BEGIN_DECLS' 
    {
        newLeafNode(lv_rule_1_0, grammarAccess.getKeyWordAccess().getRule__BEGIN_DECLSKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getKeyWordRule());
	        }
       		setWithLastConsumed($current, "rule", lv_rule_1_0, "__BEGIN_DECLS");
	    }

)
)
    |	otherlv_2='__BEGIN_NAMESPACE_STD' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getKeyWordAccess().get__BEGIN_NAMESPACE_STDKeyword_1_1());
    }

    |	otherlv_3='__BEGIN_NAMESPACE_C99' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getKeyWordAccess().get__BEGIN_NAMESPACE_C99Keyword_1_2());
    }

    |	otherlv_4='__END_DECLS' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getKeyWordAccess().get__END_DECLSKeyword_1_3());
    }

    |	otherlv_5='__END_NAMESPACE_STD' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getKeyWordAccess().get__END_NAMESPACE_STDKeyword_1_4());
    }

    |	otherlv_6='__END_NAMESPACE_C99' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getKeyWordAccess().get__END_NAMESPACE_C99Keyword_1_5());
    }

    |	otherlv_7='__USING_NAMESPACE_STD' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getKeyWordAccess().get__USING_NAMESPACE_STDKeyword_1_6());
    }

    |	otherlv_8='define' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getKeyWordAccess().getDefineKeyword_1_7());
    }

    |	otherlv_9='ifndef' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getKeyWordAccess().getIfndefKeyword_1_8());
    }

    |	otherlv_10='undef' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getKeyWordAccess().getUndefKeyword_1_9());
    }

    |	otherlv_11='ifdef' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getKeyWordAccess().getIfdefKeyword_1_10());
    }

    |	otherlv_12='if' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getKeyWordAccess().getIfKeyword_1_11());
    }

    |	otherlv_13='include' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getKeyWordAccess().getIncludeKeyword_1_12());
    }

    |	otherlv_14='include_next' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getKeyWordAccess().getInclude_nextKeyword_1_13());
    }

    |	otherlv_15='pragma' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getKeyWordAccess().getPragmaKeyword_1_14());
    }

    |	otherlv_16='else' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getKeyWordAccess().getElseKeyword_1_15());
    }

    |	otherlv_17='elif' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getKeyWordAccess().getElifKeyword_1_16());
    }

    |	otherlv_18='error' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getKeyWordAccess().getErrorKeyword_1_17());
    }

    |	otherlv_19='typedef' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getKeyWordAccess().getTypedefKeyword_1_18());
    }

    |	otherlv_20='class' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getKeyWordAccess().getClassKeyword_1_19());
    }

    |	otherlv_21='endif' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getKeyWordAccess().getEndifKeyword_1_20());
    }

    |	otherlv_22='source' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getKeyWordAccess().getSourceKeyword_1_21());
    }
))
;





// Entry rule entryRuleSYMBOLS
entryRuleSYMBOLS returns [EObject current=null] 
	:
	{ newCompositeNode(grammarAccess.getSYMBOLSRule()); }
	 iv_ruleSYMBOLS=ruleSYMBOLS 
	 { $current=$iv_ruleSYMBOLS.current; } 
	 EOF 
;

// Rule SYMBOLS
ruleSYMBOLS returns [EObject current=null] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
((
	{ 
	  /* */ 
	}
    {
        $current = forceCreateModelElement(
            grammarAccess.getSYMBOLSAccess().getSYMBOLSAction_0(),
            $current);
    }
)((
(
		lv_symbols_1_0=	',' 
    {
        newLeafNode(lv_symbols_1_0, grammarAccess.getSYMBOLSAccess().getSymbolsCommaKeyword_1_0_0());
    }
 
	    {
	        if ($current==null) {
	            $current = createModelElement(grammarAccess.getSYMBOLSRule());
	        }
       		addWithLastConsumed($current, "symbols", lv_symbols_1_0, ",");
	    }

)
)
    |	otherlv_2='.' 
    {
    	newLeafNode(otherlv_2, grammarAccess.getSYMBOLSAccess().getFullStopKeyword_1_1());
    }

    |	otherlv_3='..' 
    {
    	newLeafNode(otherlv_3, grammarAccess.getSYMBOLSAccess().getFullStopFullStopKeyword_1_2());
    }

    |	otherlv_4='...' 
    {
    	newLeafNode(otherlv_4, grammarAccess.getSYMBOLSAccess().getFullStopFullStopFullStopKeyword_1_3());
    }

    |	otherlv_5='\f' 
    {
    	newLeafNode(otherlv_5, grammarAccess.getSYMBOLSAccess().getControl000cKeyword_1_4());
    }

    |	otherlv_6=';' 
    {
    	newLeafNode(otherlv_6, grammarAccess.getSYMBOLSAccess().getSemicolonKeyword_1_5());
    }

    |	otherlv_7=' ' 
    {
    	newLeafNode(otherlv_7, grammarAccess.getSYMBOLSAccess().getSpaceKeyword_1_6());
    }

    |	otherlv_8='*' 
    {
    	newLeafNode(otherlv_8, grammarAccess.getSYMBOLSAccess().getAsteriskKeyword_1_7());
    }

    |	otherlv_9='* ' 
    {
    	newLeafNode(otherlv_9, grammarAccess.getSYMBOLSAccess().getAsteriskSpaceKeyword_1_8());
    }

    |	otherlv_10='[' 
    {
    	newLeafNode(otherlv_10, grammarAccess.getSYMBOLSAccess().getLeftSquareBracketKeyword_1_9());
    }

    |	otherlv_11=']' 
    {
    	newLeafNode(otherlv_11, grammarAccess.getSYMBOLSAccess().getRightSquareBracketKeyword_1_10());
    }

    |	otherlv_12='\n' 
    {
    	newLeafNode(otherlv_12, grammarAccess.getSYMBOLSAccess().getControl000aKeyword_1_11());
    }

    |	otherlv_13='(' 
    {
    	newLeafNode(otherlv_13, grammarAccess.getSYMBOLSAccess().getLeftParenthesisKeyword_1_12());
    }

    |	otherlv_14=')' 
    {
    	newLeafNode(otherlv_14, grammarAccess.getSYMBOLSAccess().getRightParenthesisKeyword_1_13());
    }

    |	otherlv_15='>>' 
    {
    	newLeafNode(otherlv_15, grammarAccess.getSYMBOLSAccess().getGreaterThanSignGreaterThanSignKeyword_1_14());
    }

    |	otherlv_16='<<' 
    {
    	newLeafNode(otherlv_16, grammarAccess.getSYMBOLSAccess().getLessThanSignLessThanSignKeyword_1_15());
    }

    |	otherlv_17='>' 
    {
    	newLeafNode(otherlv_17, grammarAccess.getSYMBOLSAccess().getGreaterThanSignKeyword_1_16());
    }

    |	otherlv_18='<' 
    {
    	newLeafNode(otherlv_18, grammarAccess.getSYMBOLSAccess().getLessThanSignKeyword_1_17());
    }

    |	otherlv_19='^' 
    {
    	newLeafNode(otherlv_19, grammarAccess.getSYMBOLSAccess().getCircumflexAccentKeyword_1_18());
    }

    |	otherlv_20='+' 
    {
    	newLeafNode(otherlv_20, grammarAccess.getSYMBOLSAccess().getPlusSignKeyword_1_19());
    }

    |	otherlv_21='-' 
    {
    	newLeafNode(otherlv_21, grammarAccess.getSYMBOLSAccess().getHyphenMinusKeyword_1_20());
    }

    |	otherlv_22='/' 
    {
    	newLeafNode(otherlv_22, grammarAccess.getSYMBOLSAccess().getSolidusKeyword_1_21());
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSYMBOLSAccess().getBackSlashParserRuleCall_1_22()); 
    }
ruleBackSlash
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_24='%' 
    {
    	newLeafNode(otherlv_24, grammarAccess.getSYMBOLSAccess().getPercentSignKeyword_1_23());
    }

    |	otherlv_25='|' 
    {
    	newLeafNode(otherlv_25, grammarAccess.getSYMBOLSAccess().getVerticalLineKeyword_1_24());
    }

    |	otherlv_26='->' 
    {
    	newLeafNode(otherlv_26, grammarAccess.getSYMBOLSAccess().getHyphenMinusGreaterThanSignKeyword_1_25());
    }

    |	otherlv_27='<-' 
    {
    	newLeafNode(otherlv_27, grammarAccess.getSYMBOLSAccess().getLessThanSignHyphenMinusKeyword_1_26());
    }

    |	otherlv_28='=' 
    {
    	newLeafNode(otherlv_28, grammarAccess.getSYMBOLSAccess().getEqualsSignKeyword_1_27());
    }

    |	otherlv_29='?' 
    {
    	newLeafNode(otherlv_29, grammarAccess.getSYMBOLSAccess().getQuestionMarkKeyword_1_28());
    }

    |	otherlv_30='!' 
    {
    	newLeafNode(otherlv_30, grammarAccess.getSYMBOLSAccess().getExclamationMarkKeyword_1_29());
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSYMBOLSAccess().getDoubleQuoteParserRuleCall_1_30()); 
    }
ruleDoubleQuote
    { 
        afterParserOrEnumRuleCall();
    }

    |
	{ 
	  /* */ 
	}
    { 
        newCompositeNode(grammarAccess.getSYMBOLSAccess().getSingleQuoteParserRuleCall_1_31()); 
    }
ruleSingleQuote
    { 
        afterParserOrEnumRuleCall();
    }

    |	otherlv_33=':' 
    {
    	newLeafNode(otherlv_33, grammarAccess.getSYMBOLSAccess().getColonKeyword_1_32());
    }

    |	otherlv_34='&' 
    {
    	newLeafNode(otherlv_34, grammarAccess.getSYMBOLSAccess().getAmpersandKeyword_1_33());
    }

    |	otherlv_35='~' 
    {
    	newLeafNode(otherlv_35, grammarAccess.getSYMBOLSAccess().getTildeKeyword_1_34());
    }

    |	otherlv_36='#' 
    {
    	newLeafNode(otherlv_36, grammarAccess.getSYMBOLSAccess().getNumberSignKeyword_1_35());
    }

    |this_CURLY_OPEN_37=RULE_CURLY_OPEN
    { 
    newLeafNode(this_CURLY_OPEN_37, grammarAccess.getSYMBOLSAccess().getCURLY_OPENTerminalRuleCall_1_36()); 
    }

    |this_CURLY_CLOSE_38=RULE_CURLY_CLOSE
    { 
    newLeafNode(this_CURLY_CLOSE_38, grammarAccess.getSYMBOLSAccess().getCURLY_CLOSETerminalRuleCall_1_37()); 
    }

    |this_INT_39=RULE_INT
    { 
    newLeafNode(this_INT_39, grammarAccess.getSYMBOLSAccess().getINTTerminalRuleCall_1_38()); 
    }

    |(
(
		{ 
	        newCompositeNode(grammarAccess.getSYMBOLSAccess().getName0KeyWordParserRuleCall_1_39_0()); 
	    }
		lv_name0_40_0=ruleKeyWord		{
	        if ($current==null) {
	            $current = createModelElementForParent(grammarAccess.getSYMBOLSRule());
	        }
       		set(
       			$current, 
       			"name0",
        		lv_name0_40_0, 
        		"KeyWord");
	        afterParserOrEnumRuleCall();
	    }

)
)))
;







// Entry rule entryRuleSingleQuote
entryRuleSingleQuote returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getSingleQuoteRule()); } 
	 iv_ruleSingleQuote=ruleSingleQuote 
	 { $current=$iv_ruleSingleQuote.current.getText(); }  
	 EOF 
;

// Rule SingleQuote
ruleSingleQuote returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
    this_MY_STRING_0=RULE_MY_STRING    {
		$current.merge(this_MY_STRING_0);
    }

    { 
    newLeafNode(this_MY_STRING_0, grammarAccess.getSingleQuoteAccess().getMY_STRINGTerminalRuleCall()); 
    }

    ;





// Entry rule entryRuleDoubleQuote
entryRuleDoubleQuote returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getDoubleQuoteRule()); } 
	 iv_ruleDoubleQuote=ruleDoubleQuote 
	 { $current=$iv_ruleDoubleQuote.current.getText(); }  
	 EOF 
;

// Rule DoubleQuote
ruleDoubleQuote returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getDoubleQuoteAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_DOUBLE_DQ_STRING_1=RULE_DOUBLE_DQ_STRING    {
		$current.merge(this_DOUBLE_DQ_STRING_1);
    }

    { 
    newLeafNode(this_DOUBLE_DQ_STRING_1, grammarAccess.getDoubleQuoteAccess().getDOUBLE_DQ_STRINGTerminalRuleCall_1()); 
    }
)
    ;





// Entry rule entryRuleBackSlash
entryRuleBackSlash returns [String current=null] 
	:
	{ newCompositeNode(grammarAccess.getBackSlashRule()); } 
	 iv_ruleBackSlash=ruleBackSlash 
	 { $current=$iv_ruleBackSlash.current.getText(); }  
	 EOF 
;

// Rule BackSlash
ruleBackSlash returns [AntlrDatatypeRuleToken current=new AntlrDatatypeRuleToken()] 
    @init { enterRule(); 
    }
    @after { leaveRule(); }:
(    this_STRING_0=RULE_STRING    {
		$current.merge(this_STRING_0);
    }

    { 
    newLeafNode(this_STRING_0, grammarAccess.getBackSlashAccess().getSTRINGTerminalRuleCall_0()); 
    }

    |    this_MY_BACKSLASH_1=RULE_MY_BACKSLASH    {
		$current.merge(this_MY_BACKSLASH_1);
    }

    { 
    newLeafNode(this_MY_BACKSLASH_1, grammarAccess.getBackSlashAccess().getMY_BACKSLASHTerminalRuleCall_1()); 
    }
)
    ;







// Rule FunctionType
ruleFunctionType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='declassification' 
	{
        $current = grammarAccess.getFunctionTypeAccess().getDeclassificationEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getFunctionTypeAccess().getDeclassificationEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='sanitization' 
	{
        $current = grammarAccess.getFunctionTypeAccess().getSanitizationEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getFunctionTypeAccess().getSanitizationEnumLiteralDeclaration_1()); 
    }
)
    |(	enumLiteral_2='sink' 
	{
        $current = grammarAccess.getFunctionTypeAccess().getSinkEnumLiteralDeclaration_2().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_2, grammarAccess.getFunctionTypeAccess().getSinkEnumLiteralDeclaration_2()); 
    }
)
    |(	enumLiteral_3='source' 
	{
        $current = grammarAccess.getFunctionTypeAccess().getSourceEnumLiteralDeclaration_3().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_3, grammarAccess.getFunctionTypeAccess().getSourceEnumLiteralDeclaration_3()); 
    }
)
    |(	enumLiteral_4='trust_boundary' 
	{
        $current = grammarAccess.getFunctionTypeAccess().getTrust_boundaryEnumLiteralDeclaration_4().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_4, grammarAccess.getFunctionTypeAccess().getTrust_boundaryEnumLiteralDeclaration_4()); 
    }
));



// Rule SecurityType
ruleSecurityType returns [Enumerator current=null] 
    @init { enterRule(); }
    @after { leaveRule(); }:
((	enumLiteral_0='confidential' 
	{
        $current = grammarAccess.getSecurityTypeAccess().getConfidentialEnumLiteralDeclaration_0().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_0, grammarAccess.getSecurityTypeAccess().getConfidentialEnumLiteralDeclaration_0()); 
    }
)
    |(	enumLiteral_1='sensitive' 
	{
        $current = grammarAccess.getSecurityTypeAccess().getSensitiveEnumLiteralDeclaration_1().getEnumLiteral().getInstance();
        newLeafNode(enumLiteral_1, grammarAccess.getSecurityTypeAccess().getSensitiveEnumLiteralDeclaration_1()); 
    }
));



RULE_MY_BACKSLASH : '\\';

RULE_DOUBLE_DQ_STRING : '\'"\' ~(\'"\')* \'"\'';

RULE_DOUBLE_SQ_STRING : '\'\'\' ~(\'\'\')* \'\'\'';

RULE_CURLY_OPEN : '{';

RULE_CURLY_CLOSE : '}';

RULE_MY_STRING : ('"' ('\\'|~(('\\'|'"')))* '"'|'\'' ('\\'|~(('\\'|'\'')))* '\'');

RULE_SL_COMMENT : '//' ~('@') ~(('\n'|'\r'))* ('\n'|'\r')*;

RULE_ML_COMMENT : '/*' ~('@') ( options {greedy=false;} : . )*~('@') '*/' ~(('\n'|'\r'))* ('\n'|'\r')*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


